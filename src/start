#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gonano/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

# create the runit definitions for narc
directory '/etc/service/narc' do
  recursive true
end

directory '/etc/service/narc/log' do
  recursive true
end

hook_file '/etc/service/narc/log/run' do
  source 'runit/narc-log'
  mode 0755
end

hook_file '/etc/service/narc/run' do
  source 'runit/narc'
  mode 0755
end

service 'narc' do
  action :enable
end

# create the runit definitions for nginx
directory '/etc/service/nginx' do
  recursive true
end

directory '/etc/service/nginx/log' do
  recursive true
end

hook_file '/etc/service/nginx/log/run' do
  source 'runit/nginx-log'
  mode 0755
end

hook_file '/etc/service/nginx/run' do
  source 'runit/nginx'
  mode 0755
end

service 'nginx' do
  action :enable
end

# create the runit definitions for portal
directory '/etc/service/portal' do
  recursive true
end

directory '/etc/service/portal/log' do
  recursive true
end

hook_file '/etc/service/portal/log/run' do
  source 'runit/portal-log'
  mode 0755
end

hook_file '/etc/service/portal/run' do
  source 'runit/portal'
  mode 0755
end

service 'portal' do
  action :enable
end

# punch a hole in the firewall if we're in production
if payload[:platform] == 'production'
  # ensure the rule persists reboots
  file "/etc/nanoinit.d/portal-iptables" do
    content <<-EOF
      # punch a hole in the firewall for portal
      iptables -L | grep 8443 || \
        iptables -A INPUT -p tcp -m tcp --dport 8443 -j ACCEPT
    EOF
    mode 0755
  end

  # punch a hole now
  execute "punch open the firewall" do
    command <<-EOF
      iptables -A INPUT -p tcp -m tcp --dport 8443 -j ACCEPT
    EOF
    only_if { `iptables -L | grep 8443`.empty? }
  end

end

# Attach the IP if provided
if payload[:ips]
  # set up persistance
  file "/etc/nanoinit.d/redd00" do
    content <<-EOF
      ifconfig redd0:0 #{payload[:ips][:default]}
    EOF
    mode 0755
  end

  # bring up interface
  execute "bring up vip" do
    command <<-EOF
      ifconfig redd0:0 #{payload[:ips][:default]}
    EOF
  end
end
